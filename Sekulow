#!/bin/bash
# This script uses the bash builtin "mapfile" and is only available in bash versions 4 and higher
# It also uses curl and mpv player
###############################################################
# Setup Text Colors
black=$(tput setaf 16)
white=$(tput setaf 15)
gray=$(tput setaf 236)
blue=$(tput setaf 21)
green=$(tput setaf 28)
red=$(tput setaf 1)
cyan=$(tput setaf 36)
purple=$(tput setaf 128)
brown=$(tput setaf 130)
yellow=$(tput setaf 226)
orange=$(tput setaf 202)
pink=$(tput setaf 207)
lgray=$(tput setaf 246)
lblue=$(tput setaf 39)
lgreen=$(tput setaf 118)
lred=$(tput setaf 9)
lcyan=$(tput setaf 14)
lpurple=$(tput setaf 99)

blgray=$(tput setab 246) # Background Light Gray

BoGreen=$(tput bold; tput setaf 28) # Bold Green
ReverseGR=$(tput setaf 28; tput rev) 	# Reverse Green

invis=$(tput civis)			# Invisible Cursor
norm=$(tput cnorm)			# Normal Cursor
standout=$(tput smso)
blink=$(tput blink)
reverse=$(tput rev)
bold=$(tput bold) 
reset=$(tput sgr0)      #  Reset text attributes to normal

###############################################################
tput clear

# Get the html source from aclj.org and store in file
curl -s https://aclj.org/tune-in-to-our-live-radio-shows > source

# Create the urls from the source file and store in the variable urls
urls=$(grep -Pio '(?<=<\/a><\/h2><a href=").*?(?=" download style=)' source)

# The first episode title is funky and requires different handling. Store in file
grep -Pio '(?<=Listen</span><span class="radioTitle">).*?(?=</span><div class=)' source > titles

# Get the rest of the episode titles. Append to previous title file
grep -Pio '(?<=class="loadRadioPlayer">).*?(?=</a></h2><a href=)' source | grep -v 1 >> titles

# Strip HTML entities from titles and replace with correct character
sed -i 's/&nbsp;/ /g; s/&amp;/\&/g; s/&lt;/\</g; s/&gt;/\>/g; s/&quot;/\"/g; s/#&#39;/\'"'"'/g; s/&ldquo;/\"/g; s/&rdquo;/\"/g; s/&rsquo;/\â€™/g;  s/&mdash;/\-/g; s/&#160;/\-/g;' titles 

# Create an array for the audio urls
mapfile -t < <(printf "%b\n" "${urls}") linesurl

# Print the urls and pipe it to basename to get the date thats in the filename and create array for the epsiode dates
mapfile -t < <(printf "%s\n" "${linesurl[@]}" | xargs -n1 basename -s .mp3 | sed 's/^....//') linesdates

# Create an array for the episode titles
mapfile -t < <(cat titles) linestitles

rm source
rm titles
printf "%b" "${purple}\n"
printf "%b\n" " https://aclj.org/tune-in-to-our-live-radio-shows\n"

printf "%b" "${red}"
printf "%b\n" " ACLJ Radio Show: Jay Sekulow Live\n"
# Display the Menu
printf "%b" "${green}"
printf "%b\n" " Make Your Selection"

printf "%b\n"
printf "%b" "${orange}" " 0. ""${linestitles[0]}" "${cyan}" " ${linesdates[0]}" "\n\n"
printf "%b" "${orange}" " 1. ""${linestitles[1]}" "${cyan}" " ${linesdates[1]}" "\n\n"
printf "%b" "${orange}" " 2. ""${linestitles[2]}" "${cyan}" " ${linesdates[2]}" "\n\n"
printf "%b" "${orange}" " 3. ""${linestitles[3]}" "${cyan}" " ${linesdates[3]}" "\n\n"
printf "%b" "${orange}" " 4. ""${linestitles[4]}" "${cyan}" " ${linesdates[4]}" "\n\n"
printf "%b" "${orange}" " 5. ""${linestitles[5]}" "${cyan}" " ${linesdates[5]}" "\n\n"
printf "%b" "${orange}" " 6. ""${linestitles[6]}" "${cyan}" " ${linesdates[6]}" "\n\n"
printf "%b" "${orange}" " 7. ""${linestitles[7]}" "${cyan}" " ${linesdates[7]}" "\n\n"
printf "%b" "${orange}" " 8. ""${linestitles[8]}" "${cyan}" " ${linesdates[8]}" "\n\n"
printf "%b" "${orange}" " 9. ""${linestitles[9]}" "${cyan}" " ${linesdates[9]}" "\n\n"

printf "%b" "${invis}"

# Get the users selected date from the menu
read -r -n 1 choice
tput el1; tput ed
#  Assign the mp3 variable from the users choice
case ${choice} in

 0) mp3="${linesurl[0]}"
 ;;
 1) mp3="${linesurl[1]}"
 ;;
 2) mp3="${linesurl[2]}"
 ;;
 3) mp3="${linesurl[3]}"
 ;;
 4) mp3="${linesurl[4]}"
 ;;
 5) mp3="${linesurl[5]}"
 ;;
 6) mp3="${linesurl[6]}"
 ;;
 7) mp3="${linesurl[7]}"
 ;;
 8) mp3="${linesurl[8]}"
 ;;
 9) mp3="${linesurl[9]}"
 ;;
esac
printf "%b" "${reset}"  "Playing    " "${pink}" "${linestitles["${choice}"]}\n"

printf "%b" "${red}" " MPV keyboard controls"
printf "%b\n" "${blue}" " https://mpv.io/manual/master/#keyboard-control"
printf "%b" "${reset}"
printf "%b" "${norm}"
# Play the mp3 variable with mpv player
mpv --term-playing-msg='Jay Sekulow ACLJ.org' "${mp3}"
